#!/bin/env bash

BASEDIR=$(dirname "$0")
BASENAME=$(basename "$0")

_xls2csv() {
    __check_usage "$#" 2 'input.[xls|xlsx] output.csv'

    # Assign input and output file arguments to variables
    input_file="$1"
    output_file="$2"

    # Check if input file exists
    if [ ! -f "$input_file" ]; then
        echo "The file '$input_file' does not exist."
        exit 1
    fi

    # 1 field separator: 9 (tab)
    # 2 text delimiter: none
    # 3 character set: 76 (UTF-8)
    # libreoffice --headless --convert-to csv:"Text - txt - csv (StarCalc)":9,,76 "$input_file" --outdir "$(dirname "$input_file")"
    libreoffice --headless --convert-to csv:"Text - txt - csv (StarCalc)":9,,76 "$input_file" --outdir "$(dirname "$input_file")"

    file_extension="${input_file##*.}"
    # echo "File extension: $file_extension"
    mv "$(dirname "$input_file")/$(basename "$input_file" "$file_extension")csv" "$output_file"

    # remove empty lines or whitespaces or tabs
    sed -i '/^\s*$/d' "$output_file"

    # remove first tabs character from output file, if any
    sed -i 's/^\t//g' "$output_file"
}

_self-update() {
    git -C "$BASEDIR" pull
}

__check_usage() {
    local num_args_given="$1"
    local num_args_required="$2"
    local message_suffix="$3"

    if [ "$num_args_given" -ne "$num_args_required" ]; then
        echo "Usage: $BASENAME ${FUNCNAME[1]} $message_suffix"
        exit 1
    fi
}

__commands() {
    echo "Available commands:"
    echo
    # list all available functions in this script that do not start with an underscore
    declare -F | awk '{print $3}' | grep -v '^__' | sed 's/_//' | sort | sed 's/^/  /'
}

if [ "$#" -eq 0 ]; then
    echo "Usage: $BASENAME <command> [<args>]"
    echo
    __commands
    exit 1
fi

# function names conventions:
# function corresponding to subcommands start with _ (invokable and listed in __commands)
# function helpers start with __ (not invokable and not listed in __commands)
# invoke subcommand following the conventions

if declare -f "_$1" >/dev/null; then
    "_$1" "${@:2}"
else
    echo "Unknown command: $1"
    echo
    __commands
    exit 1
fi
